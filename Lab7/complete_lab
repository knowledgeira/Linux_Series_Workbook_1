Linux File Permission
2023
MANOJ JAGDALE
KNOWLEDGEIRA
LINUX FILE PERMISSION
Linux Workbook Series_1 : KNOWLEDEIRA by Manoj Jagdale
File Permission Lab
Objective: Understand user and group management, as well as file permissions in a Linux environment.
Prerequisites:
•
Basic knowledge of Linux commands.
•
Access to a Linux system (preferably a non-production environment).
Setup:
1.
Download the Script:
o
Download the file_permission_lab.sh script from the GitHub repository.
o
o
This script will set up the environment for the lab by creating users, groups, and sample files.
o
curl -so file_permission_lab.sh https://raw.githubusercontent.com/knowledgeira/Linux_Series_Workbook_1/mj/Lab7/file_permission_lab.sh
o
2.
Understand the Script:
LINUX FILE PERMISSION
Linux Workbook Series_1 : KNOWLEDEIRA by Manoj Jagdale
o
Five users have been created: manoj, ganesh, shubh, deepika, and priyanka.
o
Two groups exist: devops (with members manoj, ganesh, and priyanka) and developers (with members shubh, deepika, and priyanka).
o
Three files have been created in the /tmp directory: file_devops (owned by devops), file_developers (owned by developers), and file_collaborative (owned by both devops and developers).
3.
Execute the Script:
1.
chmod +x file_permission_lab.sh
2.
./file_permission_lab.sh
Task 1: Verify the users manoj, ganesh, shubh, deepika, and priyanka exist.
Solution:
cat /etc/passwd | grep -E 'manoj|ganesh|shubh|deepika|priyanka'
Explanation: This command checks the /etc/passwd file for the existence of the specified users.
LINUX FILE PERMISSION
Linux Workbook Series_1 : KNOWLEDEIRA by Manoj Jagdale
Task 2: List all members of the devops group.
Solution:
grep 'devops' /etc/group
Explanation: This command checks the /etc/group file for members of the devops group.
Task 3: Check the permissions of the file /tmp/file_collaborative.
Solution:
ls -l /tmp/file_collaborative
Explanation: The ls -l command displays the permissions of the specified file.
Task 4: Change the ownership of /tmp/file_devops to shubh but keep the group ownership unchanged.
Solution:
sudo chown shubh: /tmp/file_devops
LINUX FILE PERMISSION
Linux Workbook Series_1 : KNOWLEDEIRA by Manoj Jagdale
Explanation: The chown command changes the file's owner to shubh while retaining the group ownership.
Task 5: Add the setuid bit to /tmp/file_collaborative.
Solution:
sudo chmod u+s /tmp/file_collaborative
Explanation: The chmod u+s command sets the setuid bit, allowing the file to be executed with the permissions of its owner.
Task 6: Create a directory /tmp/shared_space and set the sticky bit.
Solution:
sudo mkdir /tmp/shared_space
sudo chmod +t /tmp/shared_space
Explanation: The sticky bit ensures that only the owner of a file within the directory can delete or modify it.
Task 7: Verify which users are part of both devops and developers groups.
LINUX FILE PERMISSION
Linux Workbook Series_1 : KNOWLEDEIRA by Manoj Jagdale
Solution:
groups priyanka
Explanation: The groups command displays the groups a user belongs to. In this case, priyanka is part of both groups.
Task 8: Remove deepika from the developers group.
Solution:
sudo gpasswd -d deepika developers
Explanation: The gpasswd -d command removes a user from a specified group.
Task 9: Change the group ownership of /tmp/file_collaborative to developers.
Solution:
sudo chgrp developers /tmp/file_collaborative
Explanation: The chgrp command changes the group ownership of a file.
Task 10: Check if manoj can write to /tmp/file_developers.
LINUX FILE PERMISSION
Linux Workbook Series_1 : KNOWLEDEIRA by Manoj Jagdale
Solution: By inspecting the permissions, if manoj is in the developers group and the file has write permissions for the group, then he can write to it.
Explanation: File permissions determine which users and groups can read, write, or execute a file.
Task 11: Create a file /tmp/test_file with rw-r----- permissions.
Solution:
touch /tmp/test_file
chmod 640 /tmp/test_file
Explanation: The chmod 640 command sets the desired permissions.
Task 12: Add ganesh to the developers group.
Solution:
sudo usermod -aG developers ganesh
Explanation: The usermod -aG command appends a user to a specified group.
LINUX FILE PERMISSION
Linux Workbook Series_1 : KNOWLEDEIRA by Manoj Jagdale
Task 13: Remove the setuid bit from /tmp/file_collaborative.
Solution:
sudo chmod u-s /tmp/file_collaborative
Explanation: The chmod u-s command removes the setuid bit.
Task 14: Check the permissions of all files in the /tmp directory.
Solution:
ls -l /tmp/
Explanation: The ls -l command lists files with their permissions.
Task 15: Change the password of shubh to newpassword.
Solution:
echo "shubh:newpassword" | sudo chpasswd
Explanation: The chpasswd command reads usernames and passwords from standard input and updates the passwords.
LINUX FILE PERMISSION
Linux Workbook Series_1 : KNOWLEDEIRA by Manoj Jagdale
Task 16: Create a directory /tmp/devops_files and ensure only members of the devops group can access it.
Solution:
sudo mkdir /tmp/devops_files
sudo chown :devops /tmp/devops_files
sudo chmod 770 /tmp/devops_files
Explanation: These commands create a directory, set its group ownership to devops, and adjust permissions so only the owner and group members can access it.
Task 17: Check the group ownership of /tmp/file_collaborative.
Solution:
ls -l /tmp/file_collaborative | awk '{print $4}'
Explanation: This command displays the group ownership of the specified file.
Task 18: Remove manoj from the devops group.
Solution:
LINUX FILE PERMISSION
Linux Workbook Series_1 : KNOWLEDEIRA by Manoj Jagdale
sudo gpasswd -d manoj devops
Explanation: The gpasswd -d command removes a user from a specified group.
Task 19: Set the setgid bit on /tmp/devops_files.
Solution:
sudo chmod g+s /tmp/devops_files
Explanation: The chmod g+s command sets the setgid bit, ensuring new files and subdirectories created within the directory inherit its group ID.
Task 20: Verify if priyanka can access /tmp/file_devops.
Solution: By inspecting the permissions, if priyanka is in the devops group and the file has read permissions for the group, then she can access it.
Explanation: File permissions determine which users and groups can read, write,
Task 21: Can priyanka read file_devops?
LINUX FILE PERMISSION
Linux Workbook Series_1 : KNOWLEDEIRA by Manoj Jagdale
Solution: Inspect the permissions of file_devops. If it has read permissions for the group and priyanka is part of the devops group, then she can read it.
Task 22: Change the permissions of file_developers so that only the owner can write to it.
Solution:
sudo chmod 744 /tmp/file_developers
Task 23: Can deepika modify file_collaborative?
Solution: Inspect the permissions of file_collaborative. If it has write permissions for the group and deepika is part of the developers group, then she can modify it.
Task 24: Change the ownership of file_collaborative to manoj.
Solution:
sudo chown manoj /tmp/file_collaborative
Task 25: Can shubh execute file_devops?
LINUX FILE PERMISSION
Linux Workbook Series_1 : KNOWLEDEIRA by Manoj Jagdale
Solution: Inspect the permissions of file_devops. If it has execute permissions for the group and shubh is not part of the devops group, then he cannot execute it.
Task 26: Set the setuid bit on file_collaborative.
Solution:
sudo chmod u+s /tmp/file_collaborative
Task 27: Can ganesh delete file_developers?
Solution: Inspect the permissions and ownership of file_developers. If ganesh is not the owner or does not have write permissions to the directory containing the file, then he cannot delete it.
Task 28: Change the group ownership of file_devops to developers.
Solution:
sudo chgrp developers /tmp/file_devops
LINUX FILE PERMISSION
Linux Workbook Series_1 : KNOWLEDEIRA by Manoj Jagdale
Task 29: Can priyanka write to file_devops after the group ownership change in Task 8?
Solution: Inspect the permissions of file_devops. If it has write permissions for the group and priyanka is part of the developers group, then she can write to it.
Task 30: Remove the setuid bit from file_collaborative.
Solution:
sudo chmod u-s /tmp/file_collaborative
This lab provides a hands-on approach to understanding file permissions and how they affect user interactions in a Linux environment.
Task 31: Check the permissions and ownership of /etc/passwd.
Solution:
LINUX FILE PERMISSION
Linux Workbook Series_1 : KNOWLEDEIRA by Manoj Jagdale
ls -l /etc/passwd
Explanation: The /etc/passwd file contains user account information. It's readable for everyone but only writable by the root, ensuring users can access necessary info but can't modify it.
Task 32: Set the sticky bit on a directory and observe file deletion behavior.
Solution:
mkdir shared_dir chmod 1777 shared_dir
Explanation: With the sticky bit set, only the file's owner, the directory's owner, or the root can delete or rename files within the directory.
Task 33: Identify system binaries with setuid or setgid set.
Solution:
find / -perm /4000 -o -perm /2000 2>/dev/null
LINUX FILE PERMISSION
Linux Workbook Series_1 : KNOWLEDEIRA by Manoj Jagdale
Explanation: Many system binaries require elevated privileges to function (e.g., passwd). The setuid and setgid bits allow them to run with higher privileges than those of the user executing them.
